apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

def getBuildTime() {
    return System.currentTimeMillis()
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)

    defaultConfig {
        applicationId "evolable.asia"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch
        versionName String.format("%s.%s.%s", versionMajor, versionMinor, versionPatch)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
    }

    signingConfigs {
        dev {
            storeFile file('../debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        release {
            keyAlias ''
            keyPassword ''
            storeFile file('../release.jks')
            storePassword ''
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            signingConfig signingConfigs.dev
        }

        debug {
            minifyEnabled false
            zipAlignEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'
            signingConfig signingConfigs.dev
        }
    }

    flavorDimensions "dev"
    flavorDimensions "prod"

    productFlavors {
        dev {
            buildConfigField "String", "BASE_URL", '"https://reqres.in/api"'
            buildConfigField "String", "SERVER_URL_LOAD_IMAGE", '""'
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + getBuildTime() + "L)"
            buildConfigField "int", "CACHETIME", "432000" // 5days
            buildConfigField "java.lang.String", "AUTHOR", "\"Cong Hoan\""
            manifestPlaceholders = [google_map_key: ""]
        }
        prod {
            buildConfigField "String", "BASE_URL", '"https://reqres.in/api/"'
            buildConfigField "String", "SERVER_URL_LOAD_IMAGE", '""'
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + getBuildTime() + "L)"
            buildConfigField "int", "CACHETIME", "432000" // 5days
            buildConfigField "java.lang.String", "AUTHOR", "\"Cong Hoan\""
            manifestPlaceholders = [google_map_key: ""]
        }
    }

    packagingOptions {
        exclude 'META-INF/serviNoSuchFieldExceptionces/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // support libraries
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    // Setup material dialog for supporting android < 5.0
    compile("com.afollestad.material-dialogs:core:$rootProject.ext.materialDialogs") {
        transitive = true
    }

    compile "com.android.support:multidex:$rootProject.ext.multidexVersion"

    // SDP - a scalable size unit
    compile "com.intuit.sdp:sdp-android:$rootProject.ext.sdpAndroidVersion"

    // Google API
    compile "com.google.android.gms:play-services-auth:$rootProject.ext.playServices"
    compile "com.google.android.gms:play-services:$rootProject.ext.playServices"
    // Map
    compile "com.google.android.gms:play-services-maps:$rootProject.ext.playServices"
    compile "com.google.android.gms:play-services-location:$rootProject.ext.playServices"
    compile "com.google.android.gms:play-services-places:$rootProject.ext.playServices"

    //butter knife
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    //event bus
    compile "org.greenrobot:eventbus:$rootProject.eventbusVersion"

    // CircleImageView
    compile "de.hdodenhof:circleimageview:$rootProject.ext.circleimageviewVersion"

    // Loading Image
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

    //retrofit
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$rootProject.supportLibraryVersion"
            }
        }
    }
}
